#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import asyncio
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from faceit_client import faceit_client
from storage import storage

async def test_statistics_fixes():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    test_nickname = "Geun-Hee"
    
    try:
        print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ===\n")
        
        # –ü–æ–∏—Å–∫ –∏–≥—Ä–æ–∫–∞
        print(f"1. –ü–æ–∏—Å–∫ –∏–≥—Ä–æ–∫–∞ '{test_nickname}'...")
        player = await faceit_client.find_player_by_nickname(test_nickname)
        if not player:
            print("   ‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        player_id = player['player_id']
        print(f"   SUCCESS: Player found: {player['nickname']} (ID: {player_id})")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
        player_details = await faceit_client.get_player_details(player_id)
        stats_data = await faceit_client.get_player_stats(player_id)
        
        if not player_details or not stats_data:
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
            return
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"\n3. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
        formatted_stats = faceit_client.format_player_stats(player_details, stats_data)
        
        if not formatted_stats:
            print("   ‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        print("   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        print(f"\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô ===")
        
        # 1. ELO –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
        current_elo = formatted_stats.get('elo', 0)
        current_level = formatted_stats.get('level', 0)
        
        level_thresholds = [800, 950, 1100, 1250, 1400, 1550, 1700, 1850, 2000, 2000]
        
        if current_level >= 10:
            elo_to_next = 0
        else:
            next_level_threshold = level_thresholds[current_level]
            elo_to_next = max(0, next_level_threshold - current_elo)
        
        print(f"\n1. ‚úÖ ELO –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:")
        print(f"   –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {current_level}")
        print(f"   –¢–µ–∫—É—â–∏–π ELO: {current_elo}")
        print(f"   –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: {elo_to_next if elo_to_next > 0 else '–ú–∞–∫—Å–∏–º—É–º'}")
        
        # 2. –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –æ –º–∞—Ç—á–∞—Ö
        print(f"\n2. ‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç—á–µ–π:")
        total_matches = formatted_stats.get('matches', 0)
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π: {total_matches} (–∏–∑ lifetime –¥–∞–Ω–Ω—ã—Ö)")
        
        # 3. ADR –∏ KAST
        adr_value = formatted_stats.get('adr', 0)
        kast_value = formatted_stats.get('kast', 0)
        
        print(f"\n3. ‚úÖ ADR –∏ KAST:")
        print(f"   ADR: {adr_value}")
        print(f"   KAST: {kast_value}% (–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {0 <= kast_value <= 100})")
        
        # 4. –°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ –º–∞—Ç—á
        print(f"\n4. ‚úÖ –°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ –º–∞—Ç—á:")
        avg_kills = formatted_stats.get('avg_kills_per_match', 0)
        avg_deaths = formatted_stats.get('avg_deaths_per_match', 0)
        avg_assists = formatted_stats.get('avg_assists_per_match', 0)
        
        print(f"   –£–±–∏–π—Å—Ç–≤ –∑–∞ –º–∞—Ç—á: {avg_kills}")
        print(f"   –°–º–µ—Ä—Ç–µ–π –∑–∞ –º–∞—Ç—á: {avg_deaths}")
        print(f"   –ê—Å—Å–∏—Å—Ç–æ–≤ –∑–∞ –º–∞—Ç—á: {avg_assists}")
        
        # 5. –ü–µ—Ä–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞ –º–∞—Ç—á
        print(f"\n5. ‚úÖ –ü–µ—Ä–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞ –º–∞—Ç—á:")
        avg_first_kills = formatted_stats.get('avg_first_kills_per_match', 0)
        avg_first_deaths = formatted_stats.get('avg_first_deaths_per_match', 0)
        
        print(f"   –ü–µ—Ä–≤—ã–µ —É–±–∏–π—Å—Ç–≤–∞ –∑–∞ –º–∞—Ç—á: {avg_first_kills}")
        print(f"   –ü–µ—Ä–≤—ã–µ —Å–º–µ—Ä—Ç–∏ –∑–∞ –º–∞—Ç—á: {avg_first_deaths}")
        
        # 6. –£—Ç–∏–ª–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–∞—Ç—á
        print(f"\n6. ‚úÖ –£—Ç–∏–ª–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–∞—Ç—á:")
        avg_flash = formatted_stats.get('avg_flash_assists_per_match', 0)
        avg_utility = formatted_stats.get('avg_utility_damage_per_match', 0)
        avg_molotov = formatted_stats.get('avg_molotov_damage_per_match', 0)
        
        print(f"   –û—Å–ª–µ–ø–ª–µ–Ω–∏–π –∑–∞ –º–∞—Ç—á: {avg_flash}")
        print(f"   –£—Ä–æ–Ω –≥—Ä–∞–Ω–∞—Ç–∞–º–∏ –∑–∞ –º–∞—Ç—á: {avg_utility}")
        print(f"   –£—Ä–æ–Ω –º–æ–ª–æ—Ç–æ–≤–∞–º–∏ –∑–∞ –º–∞—Ç—á: {avg_molotov}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–∞–∫ –æ–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
        print(f"\n=== –ò–¢–û–ì–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï (–∫–∞–∫ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é) ===")
        
        stats_message = f"""üìä **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞**

üë§ **–ò–≥—Ä–æ–∫:** {formatted_stats.get('nickname', 'Unknown')}
üéÆ **–£—Ä–æ–≤–µ–Ω—å:** {current_level} | **ELO:** {current_elo}
‚¨ÜÔ∏è **–î–æ —Å–ª–µ–¥. —É—Ä–æ–≤–Ω—è:** {elo_to_next if elo_to_next > 0 else '–ú–∞–∫—Å–∏–º—É–º'}
‚≠ê **HLTV Rating 2.1:** {formatted_stats.get('hltv_rating', 0):.3f}
üåç **–†–µ–≥–∏–æ–Ω:** {formatted_stats.get('region', 'N/A')}

üìà **–ò–≥—Ä–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:**
‚Ä¢ **–ö–∞—Ä—Ç —Å—ã–≥—Ä–∞–Ω–æ:** {total_matches}
‚Ä¢ **–ü–æ–±–µ–¥:** {formatted_stats.get('wins', 0)} ({formatted_stats.get('winrate', 0):.1f}%)
‚Ä¢ **–õ—É—á—à–∞—è —Å–µ—Ä–∏—è:** {formatted_stats.get('longest_win_streak', 0)} –ø–æ–±–µ–¥

‚öîÔ∏è **–°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ –º–∞—Ç—á:**
‚Ä¢ **–£–±–∏–π—Å—Ç–≤–∞:** {avg_kills}
‚Ä¢ **–°–º–µ—Ä—Ç–∏:** {avg_deaths}
‚Ä¢ **–ê—Å—Å–∏—Å—Ç—ã:** {avg_assists}

üí• **–£—Ä–æ–Ω –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
‚Ä¢ **ADR:** {adr_value:.1f}
‚Ä¢ **KAST:** {kast_value:.1f}%
‚Ä¢ **–û—Å–ª–µ–ø–ª–µ–Ω–∏–π –∑–∞ –∏–≥—Ä—É:** {avg_flash}
‚Ä¢ **–£—Ä–æ–Ω –≥—Ä–∞–Ω–∞—Ç–∞–º–∏ –∑–∞ –∏–≥—Ä—É:** {avg_utility}
‚Ä¢ **–£—Ä–æ–Ω –º–æ–ª–æ—Ç–æ–≤—ã—Ö –∑–∞ –∏–≥—Ä—É:** {avg_molotov}

üéØ **–ü–µ—Ä–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞ –º–∞—Ç—á:**
‚Ä¢ **–ü–µ—Ä–≤—ã–µ —É–±–∏–π—Å—Ç–≤–∞:** {avg_first_kills}
‚Ä¢ **–ü–µ—Ä–≤—ã–µ —Å–º–µ—Ä—Ç–∏:** {avg_first_deaths}

_–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M %d.%m.%Y')}_"""
        
        print(stats_message)
        
        print(f"\n=== ‚úÖ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´ –£–°–ü–ï–®–ù–û! ===")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        await faceit_client.close()


if __name__ == "__main__":
    asyncio.run(test_statistics_fixes())