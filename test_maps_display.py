import asyncio
from faceit_client import FaceitAPIClient

async def test_maps_display():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç"""
    print("=== –¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ö–ê–†–¢ ===\n")
    
    client = FaceitAPIClient()
    player_id = '0cf595d2-b9a1-4316-9df9-a627c7a8c664'
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        player_details = await client.get_player_details(player_id)
        stats_data = await client.get_player_stats(player_id)
        
        if not stats_data or not player_details:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
            return
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É  
        formatted_stats = client.format_player_stats(player_details, stats_data)
        maps_stats = formatted_stats.get('maps', {})
        
        print(f"–ü–æ–ª—É—á–µ–Ω–æ –∫–∞—Ä—Ç –∏–∑ API: {len(maps_stats)}")
        
        # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –ª–æ–≥–∏–∫—É –∏–∑ main_handler.py
        map_emojis = {
            'mirage': 'üåã',
            'inferno': 'üè≠', 
            'dust2': 'üå™Ô∏è',
            'nuke': 'üåå',
            'vertigo': 'üèîÔ∏è',
            'ancient': 'üåø',
            'anubis': 'üè∫',
            'train': 'üöÇ',
            'overpass': 'üåâ'
        }
        
        message_text = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º\n\n"
        
        if maps_stats:
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞—Ä—Ç—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –º–∞—Ç—á–µ–π (—É–±—ã–≤–∞–Ω–∏–µ)
            sorted_maps = sorted(
                maps_stats.items(), 
                key=lambda x: x[1].get('matches', 0), 
                reverse=True
            )
            
            for i, (map_name, map_data) in enumerate(sorted_maps, 1):
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∂–∏ –¥–ª—è –∫–∞—Ä—Ç—ã
                map_key = map_name.lower().replace(' ', '').replace('de_', '')
                map_emoji = map_emojis.get(map_key, 'üó∫Ô∏è')
                
                message_text += f"{i}. {map_name}\n"
                
                matches = map_data.get('matches', 0)
                if matches > 0:
                    # –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    wins = map_data.get('wins', 0)
                    winrate = map_data.get('winrate', 0)
                    kd_ratio = map_data.get('kd_ratio', 0)
                    adr = map_data.get('adr', 0)
                    
                    message_text += f"   –ú–∞—Ç—á–µ–π: {matches} (–ü–æ–±–µ–¥: {wins})\n"
                    message_text += f"   Winrate: {winrate:.1f}%\n"
                    message_text += f"   K/D: {kd_ratio:.3f}\n"
                    message_text += f"   ADR: {adr:.1f}\n\n"
                else:
                    # –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    message_text += f"   –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Ä—Ç–µ\n\n"
        else:
            message_text += "–î–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ä—Ç–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\n"
        
        print("=== –†–ï–ó–£–õ–¨–¢–ê–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø ===")
        print(message_text)
        
        print(f"\n=== –î–ï–¢–ê–õ–ò ===")
        print(f"–í—Å–µ–≥–æ –∫–∞—Ä—Ç: {len(sorted_maps)}")
        print("–ü–æ—Ä—è–¥–æ–∫ –∫–∞—Ä—Ç (–ø–æ –º–∞—Ç—á–∞–º):")
        for i, (map_name, map_data) in enumerate(sorted_maps, 1):
            matches = map_data.get('matches', 0)
            print(f"  {i}. {map_name}: {matches} –º–∞—Ç—á–µ–π")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_maps_display())