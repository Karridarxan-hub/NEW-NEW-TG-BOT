from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞", callback_data="player_stats")
    builder.button(text="üìù –ò—Å—Ç–æ—Ä–∏—è –º–∞—Ç—á–µ–π", callback_data="match_history")
    builder.button(text="üìà –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã", callback_data="form_analysis")
    builder.button(text="üéÆ –ü–æ—Å–ª–µ–¥–Ω–∏–π –º–∞—Ç—á", callback_data="last_match")
    builder.button(text="‚öîÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤", callback_data="player_comparison")
    builder.button(text="üîç –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Ç—á–∞", callback_data="current_match_analysis")
    builder.button(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")
    builder.button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
    builder.button(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")
    
    builder.adjust(3, 3, 3)
    return builder.as_markup()


def get_stats_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats_overall")],
        [InlineKeyboardButton(text="üó∫Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º", callback_data="stats_maps")],
        [InlineKeyboardButton(text="‚è∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ—Å—Å–∏—é", callback_data="stats_session")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ])
    return keyboard

def get_player_stats_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats_overall")
    builder.button(text="üó∫Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º", callback_data="stats_maps")
    builder.button(text="‚è∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ—Å—Å–∏—é", callback_data="stats_session")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(1, 1, 1, 2)
    return builder.as_markup()


def get_match_history_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∏—Å—Ç–æ—Ä–∏–∏ –º–∞—Ç—á–µ–π - –Ω–æ–≤–∞—è —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    builder = InlineKeyboardBuilder()
    
    # 4 –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ –ø—Ä–æ—Å–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    builder.button(text="5 –º–∞—Ç—á–µ–π", callback_data="history_5")
    builder.button(text="10 –º–∞—Ç—á–µ–π", callback_data="history_10")
    builder.button(text="30 –º–∞—Ç—á–µ–π", callback_data="history_30")
    builder.button(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", callback_data="history_custom")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    
    builder.adjust(2, 2, 1)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —Ä—è–¥–∞—Ö, 1 –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    return builder.as_markup()


def get_form_analysis_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ä–º—ã"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üìä –ê–Ω–∞–ª–∏–∑ 10 –º–∞—Ç—á–µ–π", callback_data="form_10")
    builder.button(text="üìà –ê–Ω–∞–ª–∏–∑ 20 –º–∞—Ç—á–µ–π", callback_data="form_20")
    builder.button(text="üìã –ê–Ω–∞–ª–∏–∑ 50 –º–∞—Ç—á–µ–π", callback_data="form_50")
    builder.button(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", callback_data="form_custom")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(1, 1, 1, 1, 2)
    return builder.as_markup()


def get_player_comparison_keyboard(show_comparison: bool = False) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è –≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ", callback_data="comparison_add_self")
    builder.button(text="üë§ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞", callback_data="comparison_add_player")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –≤—ã–±—Ä–∞–Ω–æ 2 –∏–≥—Ä–æ–∫–∞
    if show_comparison:
        builder.button(text="üìä –ü–æ–ª—É—á–∏—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ", callback_data="comparison_get")
    
    builder.button(text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="comparison_clear")
    
    if show_comparison:
        builder.adjust(1, 1, 1, 1)
    else:
        builder.adjust(1, 1, 1)
    
    return builder.as_markup()


def get_settings_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–∞—Ç—á–∞—Ö", callback_data="settings_notifications")
    builder.button(text="‚≠ê –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="settings_subscription")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(1, 1, 2)
    return builder.as_markup()


def get_notifications_toggle_keyboard(enabled: bool) -> InlineKeyboardMarkup:
    """–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–≤–∫–ª/–≤—ã–∫–ª)"""
    builder = InlineKeyboardBuilder()
    
    status_text = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if enabled else "‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã"
    action = "disable" if enabled else "enable"
    
    builder.button(text=f"üîî {status_text}", callback_data=f"toggle_notifications_{action}")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="settings")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(1, 2)
    return builder.as_markup()


def get_subscription_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üì¶ –°—Ç–∞–Ω–¥–∞—Ä—Ç (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)", callback_data="subscription_standard")
    builder.button(text="‚≠ê –ü—Ä–µ–º–∏—É–º (–∑–≤–µ–∑–¥—ã)", callback_data="subscription_premium")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="settings")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(1, 1, 2)
    return builder.as_markup()


def get_back_to_main_keyboard() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    return builder.as_markup()


def get_back_keyboard(callback_data: str) -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data=callback_data)
    return builder.as_markup()


def get_maps_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç CS2"""
    builder = InlineKeyboardBuilder()
    
    maps = [
        ("üåã Mirage", "map_mirage"),
        ("üè≠ Inferno", "map_inferno"),
        ("üå™Ô∏è Dust2", "map_dust2"),
        ("üöÇ Train", "map_train"),
        ("üè∞ Cache", "map_cache"),
        ("üåä Overpass", "map_overpass"),
        ("üåå Nuke", "map_nuke"),
        ("üèîÔ∏è Vertigo", "map_vertigo"),
        ("üåø Ancient", "map_ancient")
    ]
    
    for map_name, callback in maps:
        builder.button(text=map_name, callback_data=callback)
    
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="stats_maps")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(3, 3, 3, 2)
    return builder.as_markup()


def get_profile_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üîÑ –°–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="change_profile")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(1, 2)
    return builder.as_markup()


def get_help_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–æ–º–æ—â–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üìñ –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞", callback_data="help_description")
    builder.button(text="üìñ –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π", callback_data="help_functions")
    builder.button(text="üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º", callback_data="help_contact")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(2, 1, 2)
    return builder.as_markup()


def get_last_match_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–∞—Ç—á–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="last_match_refresh")
    builder.button(text="üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="last_match_detailed")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(2, 2)
    return builder.as_markup()


def get_current_match_analysis_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Ç—á–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üîç –ü–æ–∏—Å–∫ –º–∞—Ç—á–∞", callback_data="current_match_search")
    builder.button(text="üìä –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∞–Ω–¥", callback_data="current_match_teams")
    builder.button(text="üó∫Ô∏è –ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç—ã", callback_data="current_match_map")
    builder.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="current_match_refresh")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    
    builder.adjust(2, 2, 2)
    return builder.as_markup()


def get_number_input_keyboard(min_val: int, max_val: int, callback_prefix: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ —á–∏—Å–ª–∞"""
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å —á–∏—Å–ª–∞–º–∏
    for i in range(min_val, min(max_val + 1, min_val + 10)):
        builder.button(text=str(i), callback_data=f"{callback_prefix}_{i}")
    
    if max_val > min_val + 9:
        builder.button(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", callback_data=f"{callback_prefix}_manual")
    
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    
    builder.adjust(5, 5 if max_val > min_val + 9 else 0, 1)
    return builder.as_markup()


def get_back_to_history_keyboard() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∏—Å—Ç–æ—Ä–∏–∏ –º–∞—Ç—á–µ–π"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üîô –ù–∞–∑–∞–¥ –∫ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="match_history")
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    builder.adjust(1, 1)
    return builder.as_markup()


# =================== –ù–û–í–´–ï REPLY –ö–õ–ê–í–ò–ê–¢–£–†–´ –î–õ–Ø UI/UX ===================

def get_main_reply_keyboard() -> ReplyKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–∞—è reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞"""
    builder = ReplyKeyboardBuilder()
    
    # –ü–µ—Ä–≤—ã–π —Ä—è–¥ - –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    builder.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    builder.button(text="üìù –ò—Å—Ç–æ—Ä–∏—è")
    builder.button(text="üìà –§–æ—Ä–º–∞")
    
    # –í—Ç–æ—Ä–æ–π —Ä—è–¥ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    builder.button(text="üéÆ –ü–æ—Å–ª–µ–¥–Ω–∏–π –º–∞—Ç—á")
    builder.button(text="‚öîÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ")
    builder.button(text="üîç –ê–Ω–∞–ª–∏–∑ –º–∞—Ç—á–∞")
    
    # –¢—Ä–µ—Ç–∏–π —Ä—è–¥ - –ø—Ä–æ—Ñ–∏–ª—å –∏ –ø–æ–º–æ—â—å
    builder.button(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")
    builder.button(text="‚ùì –ü–æ–º–æ—â—å")
    
    builder.adjust(3, 3, 2)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)


def get_stats_reply_keyboard() -> ReplyKeyboardMarkup:
    """Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    builder = ReplyKeyboardBuilder()
    
    builder.button(text="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    builder.button(text="üó∫Ô∏è –ü–æ –∫–∞—Ä—Ç–∞–º")
    builder.button(text="‚è∞ –ó–∞ —Å–µ—Å—Å–∏—é")
    builder.button(text="üîô –ù–∞–∑–∞–¥")
    
    builder.adjust(2, 1, 1)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)


def get_history_reply_keyboard() -> ReplyKeyboardMarkup:
    """Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –º–∞—Ç—á–µ–π"""
    builder = ReplyKeyboardBuilder()
    
    builder.button(text="5 –º–∞—Ç—á–µ–π")
    builder.button(text="10 –º–∞—Ç—á–µ–π")
    builder.button(text="30 –º–∞—Ç—á–µ–π")
    builder.button(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ")
    builder.button(text="üîô –ù–∞–∑–∞–¥")
    
    builder.adjust(2, 2, 1)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)


def get_form_reply_keyboard() -> ReplyKeyboardMarkup:
    """Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ä–º—ã"""
    builder = ReplyKeyboardBuilder()
    
    builder.button(text="üìä –ê–Ω–∞–ª–∏–∑ 10 –º–∞—Ç—á–µ–π")
    builder.button(text="üìà –ê–Ω–∞–ª–∏–∑ 20 –º–∞—Ç—á–µ–π")
    builder.button(text="üìã –ê–Ω–∞–ª–∏–∑ 50 –º–∞—Ç—á–µ–π")
    builder.button(text="‚úèÔ∏è –°–≤–æ–π –ø–µ—Ä–∏–æ–¥")
    builder.button(text="üîô –ù–∞–∑–∞–¥")
    
    builder.adjust(2, 2, 1)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)


def get_comparison_reply_keyboard(show_comparison: bool = False, players_count: int = 0) -> ReplyKeyboardMarkup:
    """Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤"""
    builder = ReplyKeyboardBuilder()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º–µ–Ω—å—à–µ 2 –∏–≥—Ä–æ–∫–æ–≤
    if players_count < 2:
        builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è")
        builder.button(text="üë§ –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–æ–≥–¥–∞ —Ä–æ–≤–Ω–æ 2 –∏–≥—Ä–æ–∫–∞
    if show_comparison:
        builder.button(text="üìä –°—Ä–∞–≤–Ω–∏—Ç—å!")
        
    builder.button(text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å")
    builder.button(text="üîô –ù–∞–∑–∞–¥")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    if players_count < 2:
        if show_comparison:
            builder.adjust(2, 1, 1, 1)  # –î–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è, –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ | –°—Ä–∞–≤–Ω–∏—Ç—å | –û—á–∏—Å—Ç–∏—Ç—å | –ù–∞–∑–∞–¥
        else:
            builder.adjust(2, 1, 1)     # –î–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è, –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ | –û—á–∏—Å—Ç–∏—Ç—å | –ù–∞–∑–∞–¥
    else:
        if show_comparison:
            builder.adjust(1, 1, 1)     # –°—Ä–∞–≤–Ω–∏—Ç—å | –û—á–∏—Å—Ç–∏—Ç—å | –ù–∞–∑–∞–¥
        else:
            builder.adjust(1, 1)        # –û—á–∏—Å—Ç–∏—Ç—å | –ù–∞–∑–∞–¥
    
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)




def get_help_reply_keyboard() -> ReplyKeyboardMarkup:
    """Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–º–æ—â–∏"""
    builder = ReplyKeyboardBuilder()
    
    builder.button(text="üìñ –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π")
    builder.button(text="üí¨ –°–≤—è–∑–∞—Ç—å—Å—è")
    builder.button(text="üîô –ù–∞–∑–∞–¥")
    
    builder.adjust(1, 1, 1)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)


def get_profile_reply_keyboard() -> ReplyKeyboardMarkup:
    """Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è"""
    builder = ReplyKeyboardBuilder()
    
    builder.button(text="üîÑ –°–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
    builder.button(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    builder.button(text="‚≠ê –ü–æ–¥–ø–∏—Å–∫–∞")
    builder.button(text="üîô –ù–∞–∑–∞–¥")
    
    builder.adjust(1, 2, 1)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)