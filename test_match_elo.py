#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import asyncio
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –≤ sys.path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from faceit_client import FaceitAPIClient

async def test_match_elo():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ELO –≤ –¥–µ—Ç–∞–ª—è—Ö –º–∞—Ç—á–∞"""
    client = FaceitAPIClient()
    
    test_player = "test"
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ ELO –≤ –¥–µ—Ç–∞–ª—è—Ö –º–∞—Ç—á–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞: {test_player}")
    print("=" * 60)
    
    try:
        # 1. –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞
        player_data = await client.find_player_by_nickname(test_player)
        if not player_data:
            print(f"‚ùå –ò–≥—Ä–æ–∫ {test_player} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        player_id = player_data['player_id']
        print(f"‚úÖ –ò–≥—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω: {player_data.get('nickname')} (ID: {player_id})")
        
        # 2. –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –º–∞—Ç—á–µ–π
        history_data = await client.get_player_history(player_id, limit=3)
        
        if not history_data or 'items' not in history_data:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –º–∞—Ç—á–µ–π")
            return
        
        matches = history_data['items']
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(matches)} –º–∞—Ç—á–µ–π\n")
        
        # 3. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞—Ç—á–∞ –ø–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ —á–µ—Ä–µ–∑ /matches/{match_id}
        for i, match in enumerate(matches, 1):
            match_id = match.get('match_id')
            if not match_id:
                continue
                
            print(f"üéÆ –ú–ê–¢–ß {i}: {match_id}")
            
            # –ü–æ–ª—É—á–∞–µ–º –î–ï–¢–ê–õ–ò –º–∞—Ç—á–∞ (–Ω–µ stats!)
            match_details = await client.get_match_details(match_id)
            
            if match_details:
                print(f"   ‚úÖ –î–µ—Ç–∞–ª–∏ –º–∞—Ç—á–∞ –ø–æ–ª—É—á–µ–Ω—ã")
                
                # –ò—â–µ–º ELO –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
                if 'teams' in match_details:
                    teams = match_details['teams']
                    
                    for team_name, team_data in teams.items():
                        if isinstance(team_data, dict) and 'players' in team_data:
                            players = team_data['players']
                            
                            for player in players:
                                if player.get('player_id') == player_id:
                                    print(f"   üìä –ò–≥—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–º–∞–Ω–¥–µ {team_name}:")
                                    
                                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã ELO
                                    if 'game_player_id' in player:
                                        print(f"      game_player_id: {player['game_player_id']}")
                                    if 'game_skill_level' in player:
                                        print(f"      game_skill_level: {player['game_skill_level']}")
                                    if 'elo' in player:
                                        print(f"      ‚ú® ELO: {player['elo']}")
                                    if 'faceit_elo' in player:
                                        print(f"      ‚ú® FACEIT_ELO: {player['faceit_elo']}")
                                    
                                    print(f"      üìù –í—Å–µ –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞: {list(player.keys())}")
                                    break
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥—Ä—É–≥–∏–µ –º–µ—Å—Ç–∞ —Å ELO
                if 'elo' in match_details:
                    print(f"   üéØ ELO –≤ –∫–æ—Ä–Ω–µ: {match_details['elo']}")
                    
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                if 'results' in match_details:
                    print(f"   üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {match_details['results']}")
                    
                print(f"   üìù –ö–æ—Ä–Ω–µ–≤—ã–µ –∫–ª—é—á–∏: {list(match_details.keys())[:10]}...")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –º–∞—Ç—á–∞")
            
            print()
        
        print("=" * 60)
        print("üí° –í–´–í–û–î:")
        print("–ï—Å–ª–∏ ELO –µ—Å—Ç—å –≤ –¥–µ—Ç–∞–ª—è—Ö –º–∞—Ç—á–∞, –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è")
        print("–º–µ–∂–¥—É –º–∞—Ç—á–∞–º–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–∏–Ω–∞–º–∏–∫–∏ –∑–∞ —Å–µ—Å—Å–∏—é.")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        await client.close()

if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
    if sys.platform == "win32":
        try:
            if hasattr(sys.stdout, 'reconfigure'):
                sys.stdout.reconfigure(encoding='utf-8')
                sys.stderr.reconfigure(encoding='utf-8')
        except:
            pass
    
    asyncio.run(test_match_elo())