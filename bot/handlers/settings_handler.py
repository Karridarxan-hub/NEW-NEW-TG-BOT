from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from keyboards import get_settings_keyboard, get_main_menu_keyboard
from storage import storage
import logging

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫
router = Router(name="settings_handler")


@router.callback_query(F.data == "settings")
async def show_settings(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        settings = await storage.get_user_settings(user_id) or {}
        
        notifications = settings.get('notifications', True)
        subscription_type = settings.get('subscription_type', 'standard')
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å—ã
        notification_status = "–í–∫–ª—é—á–µ–Ω—ã ‚úÖ" if notifications else "–í—ã–∫–ª—é—á–µ–Ω—ã ‚ùå"
        subscription_status = "–ü—Ä–µ–º–∏—É–º ‚≠ê" if subscription_type == 'premium' else "–°—Ç–∞–Ω–¥–∞—Ä—Ç üì¶"
        
        settings_text = f"""
‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞**

üì± **–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–∞—Ç—á–∞—Ö: {notification_status}
‚Ä¢ –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏: {subscription_status}

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫.
"""
        
        await callback.message.edit_text(
            settings_text,
            parse_mode="Markdown",
            reply_markup=get_settings_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error showing settings for user {user_id}: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫", show_alert=True)

@router.callback_query(F.data == "settings_notifications")
async def show_notifications_settings(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        settings = await storage.get_user_settings(user_id) or {}
        notifications_enabled = settings.get('notifications', True)
        
        status_text = "–≤–∫–ª—é—á–µ–Ω—ã ‚úÖ" if notifications_enabled else "–≤—ã–∫–ª—é—á–µ–Ω—ã ‚ùå"
        action_text = "–í—ã–∫–ª—é—á–∏—Ç—å" if notifications_enabled else "–í–∫–ª—é—á–∏—Ç—å"
        action_emoji = "üîï" if notifications_enabled else "üîî"
        callback_action = "disable" if notifications_enabled else "enable"
        
        notifications_text = f"""
üîî **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π**

üì± **–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:** –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è {status_text}

**–ß—Ç–æ –≤–∫–ª—é—á–∞—é—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:**
‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–∞—à–∏—Ö –º–∞—Ç—á–µ–π
‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
‚Ä¢ –í–∞–∂–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ

–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.
"""
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text=f"{action_emoji} {action_text} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", 
                callback_data=f"toggle_notifications_{callback_action}"
            )],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings")]
        ])
        
        await callback.message.edit_text(
            notifications_text,
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error showing notifications settings for user {user_id}: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", show_alert=True)

@router.callback_query(F.data.startswith("toggle_notifications_"))
async def toggle_notifications(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    user_id = callback.from_user.id
    action = callback.data.split("_")[-1]  # enable –∏–ª–∏ disable
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        new_state = action == "enable"
        await storage.update_user_settings(user_id, {'notifications': new_state})
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        status_text = "–≤–∫–ª—é—á–µ–Ω—ã ‚úÖ" if new_state else "–≤—ã–∫–ª—é—á–µ–Ω—ã ‚ùå"
        await callback.answer(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è {status_text}", show_alert=True)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        await show_notifications_settings(callback)
        
        logger.info(f"User {user_id} {'enabled' if new_state else 'disabled'} notifications")
        
    except Exception as e:
        logger.error(f"Error toggling notifications for user {user_id}: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫", show_alert=True)

@router.callback_query(F.data == "settings_subscription")
async def show_subscription_settings(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    user_id = callback.from_user.id
    
    try:
        settings = await storage.get_user_settings(user_id) or {}
        subscription_type = settings.get('subscription_type', 'standard')
        is_premium = subscription_type == 'premium'
        
        if is_premium:
            subscription_text = """
‚≠ê **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π**

üî• **–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:** –ü—Ä–µ–º–∏—É–º ‚≠ê

‚úÖ **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ –í—Å–µ –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã –¥–æ 100 –º–∞—Ç—á–µ–π
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ 10 –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–∞—Ç—á–∞—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞

üíé **–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞!**
"""
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üìä –°—Ç–∞–Ω–¥–∞—Ä—Ç", callback_data="subscription_standard")],
                [InlineKeyboardButton(text="‚≠ê –ü—Ä–µ–º–∏—É–º (–∞–∫—Ç–∏–≤–Ω–æ)", callback_data="subscription_premium")],
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings")]
            ])
        else:
            subscription_text = """
üì¶ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π**

üì¶ **–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:** –°—Ç–∞–Ω–¥–∞—Ä—Ç (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)

‚úÖ **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ –ë–∞–∑–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 20 –º–∞—Ç—á–µ–π
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã –¥–æ 20 –º–∞—Ç—á–µ–π
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ 3 –∏–≥—Ä–æ–∫–æ–≤

‚≠ê **–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã –¥–æ 100 –º–∞—Ç—á–µ–π
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ 10 –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–∞—Ç—á–∞—Ö
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

üí∞ **–°—Ç–æ–∏–º–æ—Å—Ç—å –ü—Ä–µ–º–∏—É–º:** –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
"""
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üì¶ –°—Ç–∞–Ω–¥–∞—Ä—Ç (–∞–∫—Ç–∏–≤–Ω–æ)", callback_data="subscription_standard")],
                [InlineKeyboardButton(text="‚≠ê –ü—Ä–µ–º–∏—É–º", callback_data="subscription_premium")],
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings")]
            ])
        
        await callback.message.edit_text(
            subscription_text,
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error showing subscription settings for user {user_id}: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–¥–ø–∏—Å–∫–∏", show_alert=True)

@router.callback_query(F.data == "subscription_standard")
async def show_standard_subscription(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ"""
    try:
        standard_text = """
üì¶ **–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)**

‚úÖ **–í–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ –ë–∞–∑–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 20 –º–∞—Ç—á–µ–π
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã –¥–æ 20 –º–∞—Ç—á–µ–π
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ 3 –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ CS2
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–∞—Ç—á–∞

‚ùå **–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏:**
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã (100+ –º–∞—Ç—á–µ–π)
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–∞—Ç—á–∞—Ö
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–æ–ª–µ–µ 3 –∏–≥—Ä–æ–∫–æ–≤

üì¶ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
"""
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚≠ê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ü—Ä–µ–º–∏—É–º", callback_data="subscription_premium")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings_subscription")]
        ])
        
        await callback.message.edit_text(
            standard_text,
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error showing standard subscription: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "subscription_premium")
async def show_premium_subscription(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–µ"""
    try:
        premium_text = """
‚≠ê **–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞**

üî• **–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –°—Ç–∞–Ω–¥–∞—Ä—Ç +**

‚úÖ **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –∫–∞—Ä—Ç–∞–º
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã –¥–æ 100 –º–∞—Ç—á–µ–π
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ 10 –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –º–∞—Ç—á–µ–π
‚Ä¢ –¢—Ä–µ–∫–∏–Ω–≥ —Ç–µ–∫—É—â–∏—Ö –º–∞—Ç—á–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (–æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 4 —á–∞—Å–æ–≤)

üí∞ **–°—Ç–æ–∏–º–æ—Å—Ç—å:** –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
üìÖ **–ü–µ—Ä–∏–æ–¥:** 30 –¥–Ω–µ–π
üîÑ **–ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ:** –î–∞

üõ†Ô∏è **–°—Ç–∞—Ç—É—Å:** –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
‚è∞ **–ó–∞–ø—É—Å–∫:** –û–∂–∏–¥–∞–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö

üí° –ü–æ–∫–∞ —á—Ç–æ –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤–æ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ.
"""
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", callback_data="subscription_development")],
            [InlineKeyboardButton(text="üì¶ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –°—Ç–∞–Ω–¥–∞—Ä—Ç", callback_data="subscription_standard")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings_subscription")]
        ])
        
        await callback.message.edit_text(
            premium_text,
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error showing premium subscription: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "subscription_development")
async def show_development_status(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–π"""
    try:
        development_text = """
üîß **–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ - –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**

üöß **–ß—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:**
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Stars –¥–ª—è –æ–ø–ª–∞—Ç—ã
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º

‚è∞ **–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —ç—Ç–∞–ø—ã:**
1Ô∏è‚É£ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
2Ô∏è‚É£ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
3Ô∏è‚É£ –ë–µ—Ç–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–π
4Ô∏è‚É£ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫

üìû **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:**
–í–∞—à–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å! –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏—è–º, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.

üí° **–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ.**
"""
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", callback_data="help_contact")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="subscription_premium")]
        ])
        
        await callback.message.edit_text(
            development_text,
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error showing development status: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "help_contact")
async def show_contact_support(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"""
    try:
        contact_text = """
üìû **–°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π**

üë• **–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:**
‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —ç—Ç–æ–º —á–∞—Ç–µ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ö—ç—à—Ç–µ–≥ #–ø–æ–¥–¥–µ—Ä–∂–∫–∞

üìÖ **–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:**
‚Ä¢ –û–±—ã—á–Ω–æ: –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤
‚Ä¢ –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: –≤ —Ç–µ—á–µ–Ω–∏–µ 4 —á–∞—Å–æ–≤

üîç **–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:**
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–∏—Å–∫–æ–º –ø—Ä–æ—Ñ–∏–ª—è
‚Ä¢ –û—à–∏–±–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞
‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–µ

üí¨ **–ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ —É–∫–∞–∂–∏—Ç–µ:**
‚Ä¢ –í–∞—à FACEIT –Ω–∏–∫–Ω–µ–π–º
‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
‚Ä¢ –°–∫—Ä–∏–Ω—à–æ—Ç (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)

üöÄ –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!
"""
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings")]
        ])
        
        await callback.message.edit_text(
            contact_text,
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error showing contact support: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

